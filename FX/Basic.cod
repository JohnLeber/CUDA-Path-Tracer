//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer $Globals
{
    float4  gVertexLineColor;           // Offset:    0, size:   16
}

cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 7 technique(s)
    //
    technique11 ScreenSpaceTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- vIn.PosL.x; v0.y <- vIn.PosL.y; v0.z <- vIn.PosL.z; 
                //   o0.x <- <VSScreenSpace return value>.posH.x; o0.y <- <VSScreenSpace return value>.posH.y; o0.z <- <VSScreenSpace return value>.posH.z; o0.w <- <VSScreenSpace return value>.posH.w
                //
                #line 245 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx  // r0.x <- outVS.posH.x; r0.y <- outVS.posH.y; r0.z <- outVS.posH.z
                mov r0.w, l(1.000000)  // r0.w <- outVS.posH.w
                
                #line 246
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 4 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4 gVertexLineColor;           // Offset:    0 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_output o0.xyzw
                //
                // Initial variable locations:
                //   o0.x <- <PSScreenSpace return value>.x; o0.y <- <PSScreenSpace return value>.y; o0.z <- <PSScreenSpace return value>.z; o0.w <- <PSScreenSpace return value>.w
                //
                #line 251 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov o0.xyzw, cb0[0].xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
            RasterizerState = NULL;
        }

    }

    technique11 Lines
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   o0.x <- <VSLine return value>.PosH.x; o0.y <- <VSLine return value>.PosH.y; o0.z <- <VSLine return value>.PosH.z; o0.w <- <VSLine return value>.PosH.w
                //
                #line 83 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[8].xyzw  // r1.x <- vout.PosH.x
                dp4 r1.y, r0.xyzw, cb0[9].xyzw  // r1.y <- vout.PosH.y
                dp4 r1.z, r0.xyzw, cb0[10].xyzw  // r1.z <- vout.PosH.z
                dp4 r1.w, r0.xyzw, cb0[11].xyzw  // r1.w <- vout.PosH.w
                
                #line 85
                mov o0.xyzw, r1.xyzw
                ret 
                // Approximately 8 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float4 gVertexLineColor;           // Offset:    0 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_output o0.xyzw
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   o0.x <- <PSLine return value>.x; o0.y <- <PSLine return value>.y; o0.z <- <PSLine return value>.z; o0.w <- <PSLine return value>.w
                //
                #line 90 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov o0.xyzw, cb0[0].xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 Slider
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   v2.x <- vin.Tex.x; v2.y <- vin.Tex.y; 
                //   o3.x <- <VSTex return value>.Tex.x; o3.y <- <VSTex return value>.Tex.y; 
                //   o2.x <- <VSTex return value>.NormalW.x; o2.y <- <VSTex return value>.NormalW.y; o2.z <- <VSTex return value>.NormalW.z; 
                //   o1.x <- <VSTex return value>.PosW.x; o1.y <- <VSTex return value>.PosW.y; o1.z <- <VSTex return value>.PosW.z; 
                //   o0.x <- <VSTex return value>.PosH.x; o0.y <- <VSTex return value>.PosH.y; o0.z <- <VSTex return value>.PosH.z; o0.w <- <VSTex return value>.PosH.w
                //
                #line 196 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                
                #line 197
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 200
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 203
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // r4.x <- vout.Tex.x
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // r4.y <- vout.Tex.y
                
                #line 205
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PSTex return value>.x; o0.y <- <PSTex return value>.y; o0.z <- <PSTex return value>.z; o0.w <- <PSTex return value>.w
                //
                #line 223 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z
                
                #line 225
                mov r0.xyz, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 227
                itof r0.w, l(1)  // r0.w <- litColor.w
                
                #line 229
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 7 instruction slots used
                            
            };
        }

    }

    technique11 Sun
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 98 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                
                #line 99
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 102
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 104
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_output o0.xyzw
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PSSun return value>.x; o0.y <- <PSSun return value>.y; o0.z <- <PSSun return value>.z; o0.w <- <PSSun return value>.w
                //
                #line 175 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, l(0,0,0,0)  // r0.x <- ambient.x; r0.y <- ambient.y; r0.z <- ambient.z
                
                #line 176
                mov r1.xyz, l(1.000000,1.000000,0,0)  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
                
                #line 177
                mov r2.xyz, l(0,0,0,0)  // r2.x <- spec.x; r2.y <- spec.y; r2.z <- spec.z
                
                #line 179
                add r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 184
                mov r0.w, l(0.600000)  // r0.w <- litColor.w
                
                #line 188
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 9 instruction slots used
                            
            };
        }

    }

    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 98 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                
                #line 99
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 102
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 104
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[4], immediateIndexed
                dcl_constantbuffer CB1[18], immediateIndexed
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 11
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 110 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 127
                mov r1.xyzw, l(0,0,0,0)  // r1.x <- ambient.x; r1.y <- ambient.y; r1.z <- ambient.z; r1.w <- ambient.w
                
                #line 128
                mov r2.xyzw, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                
                #line 129
                mov r3.xyzw, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z; r3.w <- spec.w
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw
                mov r5.xyzw, cb1[17].xyzw
                mov r6.xyzw, cb0[0].xyzw
                mov r7.xyzw, cb0[1].xyzw
                mov r8.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.x, r8.xyzx, r0.xyzx  // r0.x <- diffuseFactor
                
                #line 82
                lt r0.y, l(0.000000), r0.x
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.xxxx
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 88
                movc r5.xyzw, r0.yyyy, r5.xyzw, r9.xyzw
                movc r0.xyzw, r0.yyyy, r6.xyzw, r10.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r0.xyzw, r0.xyzw  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z; r0.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r0.xyzw, r0.xyzw, r3.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 143
                add r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 152
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 34 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 98 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                
                #line 99
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 102
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 104
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[8], immediateIndexed
                dcl_constantbuffer CB1[18], immediateIndexed
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 11
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 110 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 127
                mov r1.xyzw, l(0,0,0,0)  // r1.x <- ambient.x; r1.y <- ambient.y; r1.z <- ambient.z; r1.w <- ambient.w
                
                #line 128
                mov r2.xyzw, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                
                #line 129
                mov r3.xyzw, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z; r3.w <- spec.w
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw
                mov r5.xyzw, cb1[17].xyzw
                mov r6.xyzw, cb0[0].xyzw
                mov r7.xyzw, cb0[1].xyzw
                mov r8.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                
                #line 82
                lt r6.x, l(0.000000), r0.w
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.wwww
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r7.xyzw, l(0, 0, 0, 0)  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 88
                movc r5.xyzw, r6.xxxx, r5.xyzw, r9.xyzw
                movc r6.xyzw, r6.xxxx, r7.xyzw, r10.xyzw  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r6.xyzw, r6.xyzw  // r6.x <- S.x; r6.y <- S.y; r6.z <- S.z; r6.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r3.xyzw, r3.xyzw, r6.xyzw
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw  // r4.x <- mat.Ambient.x; r4.y <- mat.Ambient.y; r4.z <- mat.Ambient.z; r4.w <- mat.Ambient.w
                mov r5.xyzw, cb1[17].xyzw  // r5.x <- mat.Diffuse.x; r5.y <- mat.Diffuse.y; r5.z <- mat.Diffuse.z; r5.w <- mat.Diffuse.w
                mov r6.xyzw, cb0[4].xyzw  // r6.x <- L.Ambient.x; r6.y <- L.Ambient.y; r6.z <- L.Ambient.z; r6.w <- L.Ambient.w
                mov r7.xyzw, cb0[5].xyzw  // r7.x <- L.Diffuse.x; r7.y <- L.Diffuse.y; r7.z <- L.Diffuse.z; r7.w <- L.Diffuse.w
                mov r8.xyz, cb0[7].xyzx  // r8.x <- L.Direction.x; r8.y <- L.Direction.y; r8.z <- L.Direction.z
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.x, r8.xyzx, r0.xyzx  // r0.x <- diffuseFactor
                
                #line 82
                lt r0.y, l(0.000000), r0.x
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.xxxx
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 88
                movc r5.xyzw, r0.yyyy, r5.xyzw, r9.xyzw
                movc r0.xyzw, r0.yyyy, r6.xyzw, r10.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r0.xyzw, r0.xyzw  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z; r0.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r0.xyzw, r0.xyzw, r3.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 143
                add r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 152
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 57 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 98 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosW.z
                
                #line 99
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // r2.x <- vout.NormalW.x
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // r2.y <- vout.NormalW.y
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // r2.z <- vout.NormalW.z
                
                #line 102
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // r3.z <- vout.PosH.z
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // r3.w <- vout.PosH.w
                
                #line 104
                mov o0.xyzw, r3.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r2.xyzx
                ret 
                // Approximately 16 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[12], immediateIndexed
                dcl_constantbuffer CB1[18], immediateIndexed
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 11
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 110 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- pin.NormalW.x; r0.y <- pin.NormalW.y; r0.z <- pin.NormalW.z
                
                #line 127
                mov r1.xyzw, l(0,0,0,0)  // r1.x <- ambient.x; r1.y <- ambient.y; r1.z <- ambient.z; r1.w <- ambient.w
                
                #line 128
                mov r2.xyzw, l(0,0,0,0)  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z; r2.w <- diffuse.w
                
                #line 129
                mov r3.xyzw, l(0,0,0,0)  // r3.x <- spec.x; r3.y <- spec.y; r3.z <- spec.z; r3.w <- spec.w
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw
                mov r5.xyzw, cb1[17].xyzw
                mov r6.xyzw, cb0[0].xyzw
                mov r7.xyzw, cb0[1].xyzw
                mov r8.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // r0.w <- diffuseFactor
                
                #line 82
                lt r6.x, l(0.000000), r0.w
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.wwww
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r7.xyzw, l(0, 0, 0, 0)  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 88
                movc r5.xyzw, r6.xxxx, r5.xyzw, r9.xyzw
                movc r6.xyzw, r6.xxxx, r7.xyzw, r10.xyzw  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r6.xyzw, r6.xyzw  // r6.x <- S.x; r6.y <- S.y; r6.z <- S.z; r6.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r3.xyzw, r3.xyzw, r6.xyzw
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw  // r4.x <- mat.Ambient.x; r4.y <- mat.Ambient.y; r4.z <- mat.Ambient.z; r4.w <- mat.Ambient.w
                mov r5.xyzw, cb1[17].xyzw  // r5.x <- mat.Diffuse.x; r5.y <- mat.Diffuse.y; r5.z <- mat.Diffuse.z; r5.w <- mat.Diffuse.w
                mov r6.xyzw, cb0[4].xyzw  // r6.x <- L.Ambient.x; r6.y <- L.Ambient.y; r6.z <- L.Ambient.z; r6.w <- L.Ambient.w
                mov r7.xyzw, cb0[5].xyzw  // r7.x <- L.Diffuse.x; r7.y <- L.Diffuse.y; r7.z <- L.Diffuse.z; r7.w <- L.Diffuse.w
                mov r8.xyz, cb0[7].xyzx  // r8.x <- L.Direction.x; r8.y <- L.Direction.y; r8.z <- L.Direction.z
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx
                
                #line 82
                lt r6.x, l(0.000000), r0.w
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.wwww
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r7.xyzw, l(0, 0, 0, 0)  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 88
                movc r5.xyzw, r6.xxxx, r5.xyzw, r9.xyzw
                movc r6.xyzw, r6.xxxx, r7.xyzw, r10.xyzw  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r6.xyzw, r6.xyzw  // r6.x <- S.x; r6.y <- S.y; r6.z <- S.z; r6.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r3.xyzw, r3.xyzw, r6.xyzw
                
                #line 136
                nop 
                mov r4.xyzw, cb1[16].xyzw  // r4.x <- mat.Ambient.x; r4.y <- mat.Ambient.y; r4.z <- mat.Ambient.z; r4.w <- mat.Ambient.w
                mov r5.xyzw, cb1[17].xyzw  // r5.x <- mat.Diffuse.x; r5.y <- mat.Diffuse.y; r5.z <- mat.Diffuse.z; r5.w <- mat.Diffuse.w
                mov r6.xyzw, cb0[8].xyzw  // r6.x <- L.Ambient.x; r6.y <- L.Ambient.y; r6.z <- L.Ambient.z; r6.w <- L.Ambient.w
                mov r7.xyzw, cb0[9].xyzw  // r7.x <- L.Diffuse.x; r7.y <- L.Diffuse.y; r7.z <- L.Diffuse.z; r7.w <- L.Diffuse.w
                mov r8.xyz, cb0[11].xyzx  // r8.x <- L.Direction.x; r8.y <- L.Direction.y; r8.z <- L.Direction.z
                
                #line 66 "C:\Users\user\source\repos\RayTracer\FX\LightHelper.fx"
                mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                
                #line 67
                mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                
                #line 70
                mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z
                
                #line 73
                mul r4.xyzw, r4.xyzw, r6.xyzw  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z; r4.w <- ambient.w
                
                #line 78
                dp3 r0.x, r8.xyzx, r0.xyzx  // r0.x <- diffuseFactor
                
                #line 82
                lt r0.y, l(0.000000), r0.x
                
                #line 86
                mul r5.xyzw, r5.xyzw, r0.xxxx
                mul r5.xyzw, r7.xyzw, r5.xyzw  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z; r5.w <- diffuse.w
                
                #line 87
                itof r6.xyzw, l(0, 0, 0, 0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z; r6.w <- spec.w
                
                #line 88
                movc r5.xyzw, r0.yyyy, r5.xyzw, r9.xyzw
                movc r0.xyzw, r0.yyyy, r6.xyzw, r10.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 136 "C:\Users\user\source\repos\RayTracer\FX\Basic.fx"
                mov r4.xyzw, r4.xyzw  // r4.x <- A.x; r4.y <- A.y; r4.z <- A.z; r4.w <- A.w
                mov r5.xyzw, r5.xyzw  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w
                mov r0.xyzw, r0.xyzw  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z; r0.w <- S.w
                
                #line 138
                add r1.xyzw, r1.xyzw, r4.xyzw
                
                #line 139
                add r2.xyzw, r2.xyzw, r5.xyzw
                
                #line 140
                add r0.xyzw, r0.xyzw, r3.xyzw  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z; r0.w <- spec.w
                
                #line 143
                add r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 152
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 80 instruction slots used
                            
            };
        }

    }

}

